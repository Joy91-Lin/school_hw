{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "FallBack",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Receive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SwapBackToETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SwapToWETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "swapBackToETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapToWETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b815250604051806040016040528060048152602001630ae8aa8960e31b815250816003908162000066919062000123565b50600462000075828262000123565b505050620001ef565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a957607f821691505b602082108103620000ca57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011e57600081815260208120601f850160051c81016020861015620000f95750805b601f850160051c820191505b818110156200011a5782815560010162000105565b5050505b505050565b81516001600160401b038111156200013f576200013f6200007e565b620001578162000150845462000094565b84620000d0565b602080601f8311600181146200018f5760008415620001765750858301515b600019600386901b1c1916600185901b1785556200011a565b600085815260208120601f198616915b82811015620001c0578886015182559484019460019091019084016200019f565b5085821015620001df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610ae180620001ff6000396000f3fe6080604052600436106100a05760003560e01c806349e5be3a1161006457806349e5be3a146101dd57806370a08231146101fd57806395d89b4114610233578063a9059cbb14610248578063dd62ed3e14610268578063ee8b333f146102ae576100df565b806306fdde0314610127578063095ea7b31461015257806318160ddd1461018257806323b872dd146101a1578063313ce567146101c1576100df565b366100df57604080513381523460208201527fd6717f327e0cb88b4a97a7f67a453e9258252c34937ccbdd86de7cb840e7def3910160405180910390a1005b7fbdc001036fc46a66ae17116838224852b77e97398549f39b4df48f18598fd1e4333460003660405161011594939291906108ca565b60405180910390a16101256102b2565b005b34801561013357600080fd5b5061013c61034b565b6040516101499190610912565b60405180910390f35b34801561015e57600080fd5b5061017261016d36600461097c565b6103dd565b6040519015158152602001610149565b34801561018e57600080fd5b506002545b604051908152602001610149565b3480156101ad57600080fd5b506101726101bc3660046109a6565b6103f7565b3480156101cd57600080fd5b5060405160128152602001610149565b3480156101e957600080fd5b506101256101f83660046109e2565b61041b565b34801561020957600080fd5b506101936102183660046109fb565b6001600160a01b031660009081526020819052604090205490565b34801561023f57600080fd5b5061013c610553565b34801561025457600080fd5b5061017261026336600461097c565b610562565b34801561027457600080fd5b50610193610283366004610a1d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101255b600034116103075760405162461bcd60e51b815260206004820152601960248201527f56616c7565206d75737420626967676572207468616e20302e0000000000000060448201526064015b60405180910390fd5b6103113334610570565b604080513381523460208201527fecc142e29728ec0a87e21dcb22a8f038fd5808338195ca0f2d4bfdd3e2bc11f5910160405180910390a1565b60606003805461035a90610a50565b80601f016020809104026020016040519081016040528092919081815260200182805461038690610a50565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b6000336103eb8185856105aa565b60019150505b92915050565b6000336104058582856105bc565b61041085858561063a565b506001949350505050565b33600090815260208190526040902054818110156104735760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016102fe565b61047d3383610699565b604051600090339084908381818185875af1925050503d80600081146104bf576040519150601f19603f3d011682016040523d82523d6000602084013e6104c4565b606091505b50509050806105155760405162461bcd60e51b815260206004820152601860248201527f53776170206261636b20746f20455448204661696c65642e000000000000000060448201526064016102fe565b60408051338152602081018590527f5f0cb0fa9b9a0bdff2c81de328a30b207351beea60704da908e8c1324be9b1c7910160405180910390a1505050565b60606004805461035a90610a50565b6000336103eb81858561063a565b6001600160a01b03821661059a5760405163ec442f0560e01b8152600060048201526024016102fe565b6105a6600083836106cb565b5050565b6105b783838360016107f5565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610634578181101561062557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102fe565b610634848484840360006107f5565b50505050565b6001600160a01b03831661066457604051634b637e8f60e11b8152600060048201526024016102fe565b6001600160a01b03821661068e5760405163ec442f0560e01b8152600060048201526024016102fe565b6105b78383836106cb565b6001600160a01b0382166106c357604051634b637e8f60e11b8152600060048201526024016102fe565b6105a6826000835b6001600160a01b0383166106f65780600260008282546106eb9190610a8a565b909155506107689050565b6001600160a01b038316600090815260208190526040902054818110156107495760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102fe565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610784576002805482900390556107a3565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107e891815260200190565b60405180910390a3505050565b6001600160a01b03841661081f5760405163e602df0560e01b8152600060048201526024016102fe565b6001600160a01b03831661084957604051634a1406b160e11b8152600060048201526024016102fe565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561063457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108bc91815260200190565b60405180910390a350505050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b600060208083528351808285015260005b8181101561093f57858101830151858201604001528201610923565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461097757600080fd5b919050565b6000806040838503121561098f57600080fd5b61099883610960565b946020939093013593505050565b6000806000606084860312156109bb57600080fd5b6109c484610960565b92506109d260208501610960565b9150604084013590509250925092565b6000602082840312156109f457600080fd5b5035919050565b600060208284031215610a0d57600080fd5b610a1682610960565b9392505050565b60008060408385031215610a3057600080fd5b610a3983610960565b9150610a4760208401610960565b90509250929050565b600181811c90821680610a6457607f821691505b602082108103610a8457634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156103f157634e487b7160e01b600052601160045260246000fdfea264697066735822122084e1d608ba87d88632549393ebaa25a9f8bd6e6d67556a01e00cf8cc9ea94f2664736f6c63430008150033",
    "sourceMap": "115:1398:26:-:0;;;672:46;;;;;;;;;;1896:113:20;;;;;;;;;;;;;-1:-1:-1;;;1896:113:20;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:20;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:20;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;115:1398:26;;14:127:28;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:28;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:28;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:28;;;2580:26;2531:89;-1:-1:-1;;1335:1:28;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:28;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:28;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:28;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:28:o;:::-;115:1398:26;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100a05760003560e01c806349e5be3a1161006457806349e5be3a146101dd57806370a08231146101fd57806395d89b4114610233578063a9059cbb14610248578063dd62ed3e14610268578063ee8b333f146102ae576100df565b806306fdde0314610127578063095ea7b31461015257806318160ddd1461018257806323b872dd146101a1578063313ce567146101c1576100df565b366100df57604080513381523460208201527fd6717f327e0cb88b4a97a7f67a453e9258252c34937ccbdd86de7cb840e7def3910160405180910390a1005b7fbdc001036fc46a66ae17116838224852b77e97398549f39b4df48f18598fd1e4333460003660405161011594939291906108ca565b60405180910390a16101256102b2565b005b34801561013357600080fd5b5061013c61034b565b6040516101499190610912565b60405180910390f35b34801561015e57600080fd5b5061017261016d36600461097c565b6103dd565b6040519015158152602001610149565b34801561018e57600080fd5b506002545b604051908152602001610149565b3480156101ad57600080fd5b506101726101bc3660046109a6565b6103f7565b3480156101cd57600080fd5b5060405160128152602001610149565b3480156101e957600080fd5b506101256101f83660046109e2565b61041b565b34801561020957600080fd5b506101936102183660046109fb565b6001600160a01b031660009081526020819052604090205490565b34801561023f57600080fd5b5061013c610553565b34801561025457600080fd5b5061017261026336600461097c565b610562565b34801561027457600080fd5b50610193610283366004610a1d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101255b600034116103075760405162461bcd60e51b815260206004820152601960248201527f56616c7565206d75737420626967676572207468616e20302e0000000000000060448201526064015b60405180910390fd5b6103113334610570565b604080513381523460208201527fecc142e29728ec0a87e21dcb22a8f038fd5808338195ca0f2d4bfdd3e2bc11f5910160405180910390a1565b60606003805461035a90610a50565b80601f016020809104026020016040519081016040528092919081815260200182805461038690610a50565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b6000336103eb8185856105aa565b60019150505b92915050565b6000336104058582856105bc565b61041085858561063a565b506001949350505050565b33600090815260208190526040902054818110156104735760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016102fe565b61047d3383610699565b604051600090339084908381818185875af1925050503d80600081146104bf576040519150601f19603f3d011682016040523d82523d6000602084013e6104c4565b606091505b50509050806105155760405162461bcd60e51b815260206004820152601860248201527f53776170206261636b20746f20455448204661696c65642e000000000000000060448201526064016102fe565b60408051338152602081018590527f5f0cb0fa9b9a0bdff2c81de328a30b207351beea60704da908e8c1324be9b1c7910160405180910390a1505050565b60606004805461035a90610a50565b6000336103eb81858561063a565b6001600160a01b03821661059a5760405163ec442f0560e01b8152600060048201526024016102fe565b6105a6600083836106cb565b5050565b6105b783838360016107f5565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610634578181101561062557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102fe565b610634848484840360006107f5565b50505050565b6001600160a01b03831661066457604051634b637e8f60e11b8152600060048201526024016102fe565b6001600160a01b03821661068e5760405163ec442f0560e01b8152600060048201526024016102fe565b6105b78383836106cb565b6001600160a01b0382166106c357604051634b637e8f60e11b8152600060048201526024016102fe565b6105a6826000835b6001600160a01b0383166106f65780600260008282546106eb9190610a8a565b909155506107689050565b6001600160a01b038316600090815260208190526040902054818110156107495760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102fe565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610784576002805482900390556107a3565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107e891815260200190565b60405180910390a3505050565b6001600160a01b03841661081f5760405163e602df0560e01b8152600060048201526024016102fe565b6001600160a01b03831661084957604051634a1406b160e11b8152600060048201526024016102fe565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561063457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108bc91815260200190565b60405180910390a350505050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b600060208083528351808285015260005b8181101561093f57858101830151858201604001528201610923565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461097757600080fd5b919050565b6000806040838503121561098f57600080fd5b61099883610960565b946020939093013593505050565b6000806000606084860312156109bb57600080fd5b6109c484610960565b92506109d260208501610960565b9150604084013590509250925092565b6000602082840312156109f457600080fd5b5035919050565b600060208284031215610a0d57600080fd5b610a1682610960565b9392505050565b60008060408385031215610a3057600080fd5b610a3983610960565b9150610a4760208401610960565b90509250929050565b600181811c90821680610a6457607f821691505b602082108103610a8457634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156103f157634e487b7160e01b600052601160045260246000fdfea264697066735822122084e1d608ba87d88632549393ebaa25a9f8bd6e6d67556a01e00cf8cc9ea94f2664736f6c63430008150033",
    "sourceMap": "115:1398:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:30;;;466:10;188:51:28;;478:9:26;270:2:28;255:18;;248:34;458:30:26;;161:18:28;458:30:26;;;;;;;115:1398;;596:41;605:10;617:9;628:8;;596:41;;;;;;;;;:::i;:::-;;;;;;;;647:12;:10;:12::i;:::-;115:1398;2074:89:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;-1:-1:-1;4293:186:20;;;;;:::i;:::-;;:::i;:::-;;;2012:14:28;;2005:22;1987:41;;1975:2;1960:18;4293:186:20;1847:187:28;3144:97:20;;;;;;;;;;-1:-1:-1;3222:12:20;;3144:97;;;2185:25:28;;;2173:2;2158:18;3144:97:20;2039:177:28;5039:244:20;;;;;;;;;;-1:-1:-1;5039:244:20;;;;;:::i;:::-;;:::i;3002:82::-;;;;;;;;;;-1:-1:-1;3002:82:20;;3075:2;2696:36:28;;2684:2;2669:18;3002:82:20;2554:184:28;1089:421:26;;;;;;;;;;-1:-1:-1;1089:421:26;;;;;:::i;:::-;;:::i;3299:116:20:-;;;;;;;;;;-1:-1:-1;3299:116:20;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:20;3364:7;3390:18;;;;;;;;;;;;3299:116;2276:93;;;;;;;;;;;;;:::i;3610:178::-;;;;;;;;;;-1:-1:-1;3610:178:20;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;;;;;-1:-1:-1;3846:140:20;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:20;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;780:235:26;;;846:1;834:9;:13;826:51;;;;-1:-1:-1;;;826:51:26;;3586:2:28;826:51:26;;;3568:21:28;3625:2;3605:18;;;3598:30;3664:27;3644:18;;;3637:55;3709:18;;826:51:26;;;;;;;;;932:28;938:10;950:9;932:5;:28::i;:::-;975:33;;;986:10;188:51:28;;998:9:26;270:2:28;255:18;;248:34;975:33:26;;161:18:28;975:33:26;;;;;;;780:235::o;2074:89:20:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:23;4420:31:20;735:10:23;4436:7:20;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:23;5182:37:20;5198:4;735:10:23;5213:5:20;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:20;;5039:244;-1:-1:-1;;;;5039:244:20:o;1089:421:26:-;1191:10;1166:12;3390:18:20;;;;;;;;;;;1220:17:26;;;;1212:51;;;;-1:-1:-1;;;1212:51:26;;4325:2:28;1212:51:26;;;4307:21:28;4364:2;4344:18;;;4337:30;-1:-1:-1;;;4383:18:28;;;4376:51;4444:18;;1212:51:26;4123:345:28;1212:51:26;1318:25;1324:10;1336:6;1318:5;:25::i;:::-;1366:42;;1354:6;;1374:10;;1397:6;;1354;1366:42;1354:6;1366:42;1397:6;1374:10;1366:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:55;;;1426:1;1418:37;;;;-1:-1:-1;;;1418:37:26;;4885:2:28;1418:37:26;;;4867:21:28;4924:2;4904:18;;;4897:30;4963:26;4943:18;;;4936:54;5007:18;;1418:37:26;4683:348:28;1418:37:26;1470:33;;;1484:10;188:51:28;;270:2;255:18;;248:34;;;1470:33:26;;161:18:28;1470:33:26;;;;;;;1132:378;;1089:421;:::o;2276:93:20:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:23;3733:27:20;735:10:23;3750:2:20;3754:5;3733:9;:27::i;7721:208::-;-1:-1:-1;;;;;7791:21:20;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:20;;7864:1;7835:32;;;5182:51:28;5155:18;;7835:32:20;5036:203:28;7787:91:20;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:20;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:20;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:20;;-1:-1:-1;;;;;5464:32:28;;10936:60:20;;;5446:51:28;5513:18;;;5506:34;;;5556:18;;;5549:34;;;5419:18;;10936:60:20;5244:345:28;10881:130:20;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:20;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:20;;5807:1;5780:30;;;5182:51:28;5155:18;;5780:30:20;5036:203:28;5735:86:20;-1:-1:-1;;;;;5834:16:20;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:20;;5902:1;5873:32;;;5182:51:28;5155:18;;5873:32:20;5036:203:28;5830:86:20;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;8247:206::-;-1:-1:-1;;;;;8317:21:20;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:20;;8388:1;8361:30;;;5182:51:28;5155:18;;8361:30:20;5036:203:28;8313:89:20;8411:35;8419:7;8436:1;8440:5;6271:1107;-1:-1:-1;;;;;6360:18:20;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:20;;-1:-1:-1;6356:540:20;;-1:-1:-1;;;;;6570:15:20;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:20;;-1:-1:-1;;;;;5464:32:28;;6649:50:20;;;5446:51:28;5513:18;;;5506:34;;;5556:18;;;5549:34;;;5419:18;;6649:50:20;5244:345:28;6599:115:20;-1:-1:-1;;;;;6834:15:20;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:20;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:20;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:20;7355:4;-1:-1:-1;;;;;7346:25:20;;7365:5;7346:25;;;;2185::28;;2173:2;2158:18;;2039:177;7346:25:20;;;;;;;;6271:1107;;;:::o;9949:432::-;-1:-1:-1;;;;;10061:19:20;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:20;;10132:1;10103:32;;;5182:51:28;5155:18;;10103:32:20;5036:203:28;10057:89:20;-1:-1:-1;;;;;10159:21:20;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:20;;10231:1;10203:31;;;5182:51:28;5155:18;;10203:31:20;5036:203:28;10155:90:20;-1:-1:-1;;;;;10254:18:20;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:20;10342:5;-1:-1:-1;;;;;10333:31:20;;10358:5;10333:31;;;;2185:25:28;;2173:2;2158:18;;2039:177;10333:31:20;;;;;;;;9949:432;;;;:::o;293:559:28:-;-1:-1:-1;;;;;506:32:28;;488:51;;570:2;555:18;;548:34;;;618:2;613;598:18;;591:30;;;637:18;;630:34;;;657:6;707;701:3;686:19;;673:49;772:1;742:22;;;766:3;738:32;;;731:43;;;;835:2;814:15;;;-1:-1:-1;;810:29:28;795:45;791:55;;293:559;-1:-1:-1;;;293:559:28:o;857:548::-;969:4;998:2;1027;1016:9;1009:21;1059:6;1053:13;1102:6;1097:2;1086:9;1082:18;1075:34;1127:1;1137:140;1151:6;1148:1;1145:13;1137:140;;;1246:14;;;1242:23;;1236:30;1212:17;;;1231:2;1208:26;1201:66;1166:10;;1137:140;;;1141:3;1326:1;1321:2;1312:6;1301:9;1297:22;1293:31;1286:42;1396:2;1389;1385:7;1380:2;1372:6;1368:15;1364:29;1353:9;1349:45;1345:54;1337:62;;;;857:548;;;;:::o;1410:173::-;1478:20;;-1:-1:-1;;;;;1527:31:28;;1517:42;;1507:70;;1573:1;1570;1563:12;1507:70;1410:173;;;:::o;1588:254::-;1656:6;1664;1717:2;1705:9;1696:7;1692:23;1688:32;1685:52;;;1733:1;1730;1723:12;1685:52;1756:29;1775:9;1756:29;:::i;:::-;1746:39;1832:2;1817:18;;;;1804:32;;-1:-1:-1;;;1588:254:28:o;2221:328::-;2298:6;2306;2314;2367:2;2355:9;2346:7;2342:23;2338:32;2335:52;;;2383:1;2380;2373:12;2335:52;2406:29;2425:9;2406:29;:::i;:::-;2396:39;;2454:38;2488:2;2477:9;2473:18;2454:38;:::i;:::-;2444:48;;2539:2;2528:9;2524:18;2511:32;2501:42;;2221:328;;;;;:::o;2743:180::-;2802:6;2855:2;2843:9;2834:7;2830:23;2826:32;2823:52;;;2871:1;2868;2861:12;2823:52;-1:-1:-1;2894:23:28;;2743:180;-1:-1:-1;2743:180:28:o;2928:186::-;2987:6;3040:2;3028:9;3019:7;3015:23;3011:32;3008:52;;;3056:1;3053;3046:12;3008:52;3079:29;3098:9;3079:29;:::i;:::-;3069:39;2928:186;-1:-1:-1;;;2928:186:28:o;3119:260::-;3187:6;3195;3248:2;3236:9;3227:7;3223:23;3219:32;3216:52;;;3264:1;3261;3254:12;3216:52;3287:29;3306:9;3287:29;:::i;:::-;3277:39;;3335:38;3369:2;3358:9;3354:18;3335:38;:::i;:::-;3325:48;;3119:260;;;;;:::o;3738:380::-;3817:1;3813:12;;;;3860;;;3881:61;;3935:4;3927:6;3923:17;3913:27;;3881:61;3988:2;3980:6;3977:14;3957:18;3954:38;3951:161;;4034:10;4029:3;4025:20;4022:1;4015:31;4069:4;4066:1;4059:15;4097:4;4094:1;4087:15;3951:161;;3738:380;;;:::o;5594:222::-;5659:9;;;5680:10;;;5677:133;;;5732:10;5727:3;5723:20;5720:1;5713:31;5767:4;5764:1;5757:15;5795:4;5792:1;5785:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "name()": "06fdde03",
    "swapBackToETH(uint256)": "49e5be3a",
    "swapToWETH()": "ee8b333f",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"FallBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Receive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SwapBackToETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SwapToWETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapBackToETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToWETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WETH.sol\":\"WETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/WETH.sol\":{\"keccak256\":\"0x0310f76cae219b344fc03ca3ca6d19ab94660ffc2ff7a56b66089fccfd754ed5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f78c082b7217633c0b0ba1bff71f2a241c6701b67fdb38408a2d07cd0a5369a\",\"dweb:/ipfs/QmXAbGrMBTP8ZyBvN4hCKZRy7gbH25TvpreZaZgUP8oRRp\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FallBack",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Receive",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapBackToETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapToWETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapBackToETH"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "swapToWETH"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/WETH.sol": "WETH"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/WETH.sol": {
        "keccak256": "0x0310f76cae219b344fc03ca3ca6d19ab94660ffc2ff7a56b66089fccfd754ed5",
        "urls": [
          "bzz-raw://7f78c082b7217633c0b0ba1bff71f2a241c6701b67fdb38408a2d07cd0a5369a",
          "dweb:/ipfs/QmXAbGrMBTP8ZyBvN4hCKZRy7gbH25TvpreZaZgUP8oRRp"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/WETH.sol",
    "id": 44352,
    "exportedSymbols": {
      "Context": [
        44165
      ],
      "ERC20": [
        44039
      ],
      "IERC20": [
        44117
      ],
      "IERC20Errors": [
        43429
      ],
      "IERC20Metadata": [
        44143
      ],
      "WETH": [
        44351
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1481:26",
    "nodes": [
      {
        "id": 44210,
        "nodeType": "PragmaDirective",
        "src": "32:24:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 44211,
        "nodeType": "ImportDirective",
        "src": "58:55:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44352,
        "sourceUnit": 44040,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44351,
        "nodeType": "ContractDefinition",
        "src": "115:1398:26",
        "nodes": [
          {
            "id": 44219,
            "nodeType": "EventDefinition",
            "src": "144:46:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ecc142e29728ec0a87e21dcb22a8f038fd5808338195ca0f2d4bfdd3e2bc11f5",
            "name": "SwapToWETH",
            "nameLocation": "150:10:26",
            "parameters": {
              "id": 44218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44215,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "169:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44219,
                  "src": "161:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44217,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "183:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44219,
                  "src": "178:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44216,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "178:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "160:29:26"
            }
          },
          {
            "id": 44225,
            "nodeType": "EventDefinition",
            "src": "195:49:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "5f0cb0fa9b9a0bdff2c81de328a30b207351beea60704da908e8c1324be9b1c7",
            "name": "SwapBackToETH",
            "nameLocation": "201:13:26",
            "parameters": {
              "id": 44224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44221,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "223:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44225,
                  "src": "215:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44223,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "237:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44225,
                  "src": "232:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "214:29:26"
            }
          },
          {
            "id": 44231,
            "nodeType": "EventDefinition",
            "src": "249:43:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d6717f327e0cb88b4a97a7f67a453e9258252c34937ccbdd86de7cb840e7def3",
            "name": "Receive",
            "nameLocation": "255:7:26",
            "parameters": {
              "id": 44230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44227,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "271:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44231,
                  "src": "263:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44229,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "285:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44231,
                  "src": "280:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44228,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "280:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "262:29:26"
            }
          },
          {
            "id": 44239,
            "nodeType": "EventDefinition",
            "src": "297:56:26",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "bdc001036fc46a66ae17116838224852b77e97398549f39b4df48f18598fd1e4",
            "name": "FallBack",
            "nameLocation": "303:8:26",
            "parameters": {
              "id": 44238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44233,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "320:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44239,
                  "src": "312:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "334:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44239,
                  "src": "329:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44234,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44237,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "347:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44239,
                  "src": "341:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44236,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "311:41:26"
            }
          },
          {
            "id": 44250,
            "nodeType": "FunctionDefinition",
            "src": "415:80:26",
            "nodes": [],
            "body": {
              "id": 44249,
              "nodeType": "Block",
              "src": "442:53:26",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44243,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "466:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "470:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "466:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "478:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "482:5:26",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "478:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44242,
                      "name": "Receive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44231,
                      "src": "458:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44248,
                  "nodeType": "EmitStatement",
                  "src": "453:35:26"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:26"
            },
            "returnParameters": {
              "id": 44241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:26"
            },
            "scope": 44351,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44266,
            "nodeType": "FunctionDefinition",
            "src": "552:114:26",
            "nodes": [],
            "body": {
              "id": 44265,
              "nodeType": "Block",
              "src": "580:86:26",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44254,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "605:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "609:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "605:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "617:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "621:5:26",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "617:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 44258,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "628:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "632:4:26",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "628:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 44253,
                      "name": "FallBack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44239,
                      "src": "596:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 44260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "596:41:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44261,
                  "nodeType": "EmitStatement",
                  "src": "591:46:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44262,
                      "name": "swapToWETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44300,
                      "src": "647:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "647:12:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44264,
                  "nodeType": "ExpressionStatement",
                  "src": "647:12:26"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:2:26"
            },
            "returnParameters": {
              "id": 44252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:0:26"
            },
            "scope": 44351,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44274,
            "nodeType": "FunctionDefinition",
            "src": "672:46:26",
            "nodes": [],
            "body": {
              "id": 44273,
              "nodeType": "Block",
              "src": "716:2:26",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "57726170706564204574686572",
                    "id": 44269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "692:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3",
                      "typeString": "literal_string \"Wrapped Ether\""
                    },
                    "value": "Wrapped Ether"
                  },
                  {
                    "hexValue": "57455448",
                    "id": 44270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "709:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                      "typeString": "literal_string \"WETH\""
                    },
                    "value": "WETH"
                  }
                ],
                "id": 44271,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44268,
                  "name": "ERC20",
                  "nameLocations": [
                    "686:5:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44039,
                  "src": "686:5:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "686:30:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:26"
            },
            "returnParameters": {
              "id": 44272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:0:26"
            },
            "scope": 44351,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44300,
            "nodeType": "FunctionDefinition",
            "src": "780:235:26",
            "nodes": [],
            "body": {
              "id": 44299,
              "nodeType": "Block",
              "src": "816:199:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 44278,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "834:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "838:5:26",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "834:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 44280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "846:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "834:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c7565206d75737420626967676572207468616e20302e",
                        "id": 44282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "849:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7bd0a86e9b116e1bd53bf3026a9ec734c01819b55a508fa78b61f75909b0520",
                          "typeString": "literal_string \"Value must bigger than 0.\""
                        },
                        "value": "Value must bigger than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7bd0a86e9b116e1bd53bf3026a9ec734c01819b55a508fa78b61f75909b0520",
                          "typeString": "literal_string \"Value must bigger than 0.\""
                        }
                      ],
                      "id": 44277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "826:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:51:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44284,
                  "nodeType": "ExpressionStatement",
                  "src": "826:51:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "938:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "942:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "938:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "950:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "954:5:26",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "950:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44285,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43879,
                      "src": "932:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "932:28:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44291,
                  "nodeType": "ExpressionStatement",
                  "src": "932:28:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "986:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "990:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "986:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44295,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "998:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1002:5:26",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "998:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44292,
                      "name": "SwapToWETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44219,
                      "src": "975:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:33:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44298,
                  "nodeType": "EmitStatement",
                  "src": "970:38:26"
                }
              ]
            },
            "functionSelector": "ee8b333f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapToWETH",
            "nameLocation": "789:10:26",
            "parameters": {
              "id": 44275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "799:2:26"
            },
            "returnParameters": {
              "id": 44276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:0:26"
            },
            "scope": 44351,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44350,
            "nodeType": "FunctionDefinition",
            "src": "1089:421:26",
            "nodes": [],
            "body": {
              "id": 44349,
              "nodeType": "Block",
              "src": "1132:378:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44306,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1171:7:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44349,
                      "src": "1166:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44305,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1166:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44311,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1191:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1195:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1191:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44307,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43625,
                      "src": "1181:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 44310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:21:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1166:36:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44313,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44306,
                          "src": "1220:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 44314,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44302,
                          "src": "1231:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1220:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 44316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 44312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1212:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:51:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44318,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:51:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1324:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1328:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1324:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44322,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44302,
                        "src": "1336:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44319,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43912,
                      "src": "1318:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:25:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44324,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:25:26"
                },
                {
                  "assignments": [
                    44326,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44326,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1359:1:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44349,
                      "src": "1354:6:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 44325,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1354:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 44337,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 44335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1405:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 44329,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1374:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1378:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1374:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 44328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1366:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 44327,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1366:8:26",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1366:19:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 44332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1386:4:26",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1366:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 44334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 44333,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44302,
                          "src": "1397:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1366:38:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 44336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:42:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1353:55:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44339,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44326,
                        "src": "1426:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53776170206261636b20746f20455448204661696c65642e",
                        "id": 44340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1428:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9d1b78ae3243b9dc045d4b10d5b254b4000ef4a487eac75ad4c138d074e5b40",
                          "typeString": "literal_string \"Swap back to ETH Failed.\""
                        },
                        "value": "Swap back to ETH Failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9d1b78ae3243b9dc045d4b10d5b254b4000ef4a487eac75ad4c138d074e5b40",
                          "typeString": "literal_string \"Swap back to ETH Failed.\""
                        }
                      ],
                      "id": 44338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1418:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44342,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:37:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1484:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1488:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1484:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44346,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44302,
                        "src": "1496:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44343,
                      "name": "SwapBackToETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44225,
                      "src": "1470:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:33:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44348,
                  "nodeType": "EmitStatement",
                  "src": "1465:38:26"
                }
              ]
            },
            "functionSelector": "49e5be3a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapBackToETH",
            "nameLocation": "1098:13:26",
            "parameters": {
              "id": 44303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44302,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1117:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 44350,
                  "src": "1112:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:13:26"
            },
            "returnParameters": {
              "id": 44304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:0:26"
            },
            "scope": 44351,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44212,
              "name": "ERC20",
              "nameLocations": [
                "132:5:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44039,
              "src": "132:5:26"
            },
            "id": 44213,
            "nodeType": "InheritanceSpecifier",
            "src": "132:5:26"
          }
        ],
        "canonicalName": "WETH",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44351,
          44039,
          43429,
          44143,
          44117,
          44165
        ],
        "name": "WETH",
        "nameLocation": "124:4:26",
        "scope": 44352,
        "usedErrors": [
          43399,
          43404,
          43409,
          43418,
          43423,
          43428
        ],
        "usedEvents": [
          44051,
          44060,
          44219,
          44225,
          44231,
          44239
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 26
}